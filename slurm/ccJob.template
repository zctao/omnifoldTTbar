#!/bin/bash
#SBATCH --account={ACCOUNT}
#SBATCH --gres=gpu:1       # Request GPU "generic resources"
#SBATCH --cpus-per-task=1  # Refer to cluster's documentation for the right CPU/GPU ratio
#SBATCH --mem=48000M       # Memory proportional to GPUs: 32000 Cedar, 47000 BÃ©luga, 64000 Graham.
#SBATCH --time=18:00:00  # DD-HH:MM:SS
#SBATCH --mail-user={USEREMAIL}
#SBATCH --mail-type=ALL
#SBATCH --output={LOGFILE}

module load python/3.11 scipy-stack cuda cudnn

# Prepare virualenv
source "${{HOME}}/venv_tf/bin/activate"

echo "HOSTNAME=$HOSTNAME"
CWD=$PWD

# Make a work directory on the node local disk
WORKDIR=${{SLURM_TMPDIR}}/$USER/${{SLURM_JOB_ID}}

echo WORKDIR=$WORKDIR
mkdir -p $WORKDIR
cd $WORKDIR

# Prepare data
echo 'Preparing input datasets'
mkdir -p {INPUTDIR}

tarlist=({TARBALLLIST})
filelist=({INFILELIST})

for i in "${{!tarlist[@]}}"; do
    echo "Extracting input datasets from ${{tarlist[i]}} using file list ${{filelist[i]}}"
    tar -C {INPUTDIR}/ -xf "${{tarlist[i]}}" -T "${{filelist[i]}}"
done

# Prepare output directory
echo 'Creating local output directory: {OUTPUTDIR}'
mkdir {OUTPUTDIR}

# Prepare config
echo 'Copying run config'
mkdir configs
echo "Copying {RUNCONFIG} to configs/run_config.json"
cp {RUNCONFIG} configs/run_config.json

# Get the code
echo 'Getting source code from github'
git clone --single-branch --branch devel git@github.com:zctao/omnifoldTop.git
source omnifoldTop/setup.sh

# Run unfolding
echo 'Start running unfolding...'
nvidia-smi
python omnifoldTop/run_unfold.py configs/run_config.json
echo 'Unfolding done!'

cd {OUTPUTDIR}

# check if the result directory exists
RESULTDIR="$(dirname {RESULT})"
if [ ! -d "$RESULTDIR" ]; then
    echo "Create result directory $RESULTDIR"
    mkdir -p $RESULTDIR
fi

echo "Collect output files in {OUTPUTDIR} and copy them to {RESULT}"

tar -cf {RESULT} *
cd $WORKDIR

echo "Cleaning up..."
rm -rf $WORKDIR

cd $CWD
echo "All done!"
deactivate

echo exit code $?